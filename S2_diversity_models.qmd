---
title: "S2_Diversity_models"
format: html
editor: visual
---

### 

```{r}
library(sf)
library(tmap)
library(ape)
library(knitr)
library(tidyverse)
library(nlme)
library(visreg)
library(car)
library(sjPlot)
library(tmap)
library(corrplot)
library(lme4)
library(sjstats)
```

#### DATA

-   AMF_C : Taxonomy
-   AMD_div : Diversity metrics
-   AMF_T: Traits
-   AMF_Y: AMF community matrix
-   surround: landscape

```{r}
load("SAM_data.rda")
## Digitalized data
surround = st_read("surround.gpkg")
```

#### Landscape complexity-composition: measure as natural area inside a 100 m r buffer for each point in each Age

```{r}
unique(surround$type)
## Select only natural elemnets
natural = subset(surround, type == "forest"| type == "grassland")
## Buffers around points
buffers = st_buffer (st_as_sf(X), 100)
## intersection (area that is/was natural)
natural_inter = st_intersection(buffers, natural)
## area
natural_inter$area = st_area(natural_inter)
# areas by age
areas = aggregate(natural_inter$area,list(natural_inter$Sample,natural_inter$Age),sum)
# change format
area=reshape(areas, idvar = "Group.1", timevar = "Group.2", direction = "wide")
# delete units
area[,-1]=round(apply(area[,-1],2,as.vector))
names(area) = c("Group.1", "Age1", "Age2", "Age3")
#Age 1 oldest, age 3 now
X = merge(X,area,all.x=T,by.x="Sample",by.y="Group.1")
X[is.na(X)] = 0
#Select
X_sp = st_as_sf(X)
X = X[, c("Sample", "site", "DEM", "PC1", "PC2", "Age1", "Age2", "Age3")]
#Try
#corrplot(cor(X[,-1]),  method = 'circle', diag = FALSE, type = "lower", addCoef.col = 'black')
```
